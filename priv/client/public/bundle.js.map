{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../../../../forui/container/Container.svelte","../../../../forui/button/BtnGroup.svelte","../../../../forui/button/Button.svelte","../node_modules/svelte/store/index.mjs","../../../../forui/other/Slider.svelte","../../../../forui/input/Input.svelte","../src/stores/router.js","../../../../svelte-persist/index.js","../src/stores/links.js","../src/Create.svelte","../src/Search.svelte","../src/Edit.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += \" \" + name + \"=\" + JSON.stringify(String(value)\n                .replace(/\"/g, '&#34;')\n                .replace(/'/g, '&#39;'));\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<div class:scrollx class:scrolly class:small class:middle>\n  <slot />\n</div>\n\n<script>\n  export let scrollx = false\n  export let scrolly = false\n  export let small = false\n  export let middle = false\n</script>\n\n<style>\n  div {\n    box-sizing: border-box;\n    width: var(--container-width-base);\n    max-width: var(--container-max-width);\n    height: 100%;\n    background-color: var(--common-background-color-white);\n    overflow: hidden;\n    margin: 0 auto;\n  }\n  div.small {\n    height: var(--container-small-height);\n    max-height: var(--container-small-max-height);\n    min-height: var(--container-small-min-height);\n    width: var(--container-small-width-base);\n    max-width: var(--container-small-max-width);\n  }\n  div.scrollx {\n    overflow-x: auto;\n    overflow-x: overlay;\n    padding-top: var(--container-padding-x);\n    padding-bottom: var(--container-padding-x);\n  }\n  div.scrolly {\n    overflow-y: auto;\n    overflow-y: overlay;\n    padding-left: var(--container-padding-y);\n    padding-right: var(--container-padding-y);\n  }\n  div.middle {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 100%;\n  }\n  @media screen and (max-width: 900px) {\n    div {\n      width: var(--container-width-small);\n    }\n    div.small {\n      width: var(--container-small-width-small);\n    }\n  }\n</style>\n","<div class:center class:block class:right class:between class:wrap class:gutter>\n  <slot />\n</div>\n\n<script>\n  export let center = false\n  export let block = false\n  export let right = false\n  export let between = false\n  export let wrap = false\n  export let gutter = false\n</script>\n\n<style>\n  div {\n    display: inline-flex;\n    align-items: center;\n    padding: 1px;\n  }\n  div.center {\n    justify-content: center;\n  }\n  div.right {\n    justify-content: flex-end;\n  }\n  div.between {\n    justify-content: space-between;\n  }\n  div.block {\n    display: flex;\n  }\n  div.wrap {\n    flex-wrap: wrap;\n  }\n  div.wrap > :global(*) {\n    margin-bottom: 3px;\n  }\n  div:not(.gutter) > :global(*:not(:last-child)) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n  div:not(.gutter) > :global(*:not(:first-child)) {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n  div.gutter > :global(*) {\n    margin-left: 3px;\n    margin-right: 3px;\n  }\n  div > :global(:first-child) {\n    margin-left: 0 !important;\n  }\n  div > :global(:last-child) {\n    margin-right: 0 !important;\n  }\n</style>\n","<button\n  on:click\n  aria-label={label}\n  title={label}\n  {disabled}\n  {hidden}\n  {style}\n  class:active\n  class:success\n  class:inverse\n  class:danger\n  class:clean\n  class:card\n  class:large\n  class:small\n  class:image\n  class:center\n  class:width\n  class:block>\n  <slot>{label || ''}</slot>\n  <figure>\n    <slot name=\"badge\" />\n  </figure>\n</button>\n\n<script>\n  export let image = null\n  export let label = null\n  export let disabled = false\n  export let hidden = false\n  export let active = false\n  export let success = false\n  export let inverse = false\n  export let danger = false\n  export let clean = false\n  export let small = false\n  export let large = false\n  export let card = false\n  export let block = false\n  export let width = false\n  export let center = false\n  export let style = null\n</script>\n\n<style>\n  button {\n    position: relative;\n    display: inline-flex;\n    align-items: baseline;\n    justify-content: space-between;\n    height: var(--button-height-base);\n    padding: var(--control-padding-base);\n    font-size: var(--button-font-size-base);\n    font-weight: var(--button-font-weight-base);\n    line-height: var(--control-line-height-base);\n    text-transform: var(--button-text-transform);\n    letter-spacing: var(--button-letter-spacing);\n    color: var(--button-color-primary-base);\n    background-color: var(--button-background-color-primary-base);\n    border: var(--button-border);\n    border-color: var(--button-border-color-primary);\n    border-radius: var(--button-border-radius);\n    box-shadow: var(--button-shadow-base)\n      var(--button-shadow-color-primary-base);\n    outline: none;\n    vertical-align: middle;\n    overflow: hidden;\n    word-break: break-all;\n  }\n  button.center {\n    justify-content: center;\n  }\n  button:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    box-shadow: none;\n  }\n  button:focus:not(.active) {\n    outline-offset: -4px;\n    outline: 0px dashed var(--button-border-color-primary);\n  }\n  button:hover:not(:disabled):not(.active) {\n    opacity: 0.8;\n    box-shadow: none;\n  }\n  button:active:not(.inverse):not(.clean),\n  button.active:not(.inverse):not(:disabled) {\n    outline: none;\n    box-shadow: var(--button-shadow-inset)\n      var(--button-shadow-color-primary-base);\n    background-color: var(--common-background-color-white);\n    color: var(--button-color-primary-light);\n  }\n  button.active {\n    cursor: default;\n  }\n  button.danger {\n    border-color: var(--button-border-color-tertiary);\n    background-color: var(--button-background-color-tertiary-base);\n  }\n  button.success {\n    border-color: var(--button-border-color-secondary);\n    background-color: var(--button-background-color-secondary-base);\n  }\n  button.inverse {\n    background-color: var(--button-background-color-primary-inverse);\n    color: var(--common-color-white);\n    box-shadow: var(--button-shadow-base)\n      var(--button-shadow-color-primary-dark);\n    border-color: transparent;\n  }\n  button.inverse > :global(svg) {\n    fill: var(--common-color-white);\n  }\n  button.inverse:active:not(#hack):not(:disabled),\n  button.inverse.active:not(:disabled) {\n    background-color: var(--button-background-color-primary-inverse);\n    color: var(--common-color-white);\n    opacity: 0.7;\n    box-shadow: var(--button-shadow-inverse)\n      var(--button-shadow-color-primary-dark);\n  }\n  button.success.inverse:active:not(#hack):not(:disabled),\n  button.success.inverse.active:not(:disabled),\n  button.inverse.success {\n    background-color: var(--button-background-color-secondary-inverse);\n  }\n  button.danger.inverse:active:not(#hack):not(:disabled),\n  button.danger.inverse.active:not(:disabled),\n  button.inverse.danger {\n    background-color: var(--button-background-color-tertiary-inverse);\n  }\n  button.clean {\n    position: relative;\n    border-color: transparent;\n    background-color: transparent;\n    box-shadow: none;\n  }\n  button.clean:hover:not(:disabled):not(.active) {\n    top: 1px;\n  }\n  button.clean.active {\n    border-radius: 1rem;\n  }\n  button.small {\n    height: var(--button-height-small);\n    line-height: var(--button-line-height-small);\n    padding: var(--control-padding-small);\n  }\n  button.large {\n    height: var(--button-height-large);\n    line-height: var(--button-line-height-large);\n    padding: var(--control-padding-large);\n  }\n  button.block {\n    display: flex;\n  }\n  button > :global(img) {\n    height: 9px;\n    width: auto;\n  }\n  button > :global(svg) {\n    align-self: center;\n    fill: var(--button-color-primary-base);\n  }\n  button.width {\n    width: 100%;\n  }\n  button.card {\n    min-height: var(--button-height-large);\n    line-height: inherit;\n    height: auto;\n    word-break: normal;\n    text-align: inherit;\n  }\n  figure {\n    position: absolute;\n    right: 8px;\n    top: 8px;\n    margin: 0;\n    padding: 0;\n  }\n</style>\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","{#if window.orientation}\n  <div>\n    <slot />\n  </div>\n{:else}\n  <div\n    bind:this={slider}\n    class:scroll={$isScroll}\n    on:mousedown={e => click(e)}\n    on:mouseup={() => reset()}\n    on:mouseleave={() => reset()}\n    on:mousemove={e => scroll(e)}>\n    <slot />\n  </div>\n{/if}\n\n<script>\n  import { onMount } from 'svelte'\n  import { writable } from 'svelte/store'\n\n  let ready = false\n  const isScroll = writable(false)\n  let slider\n  let startX = null\n  let scrollLeft = null\n  let reset = () => {}\n  let click = () => {}\n  let scroll = () => {}\n\n  onMount(() => {\n    if (window.orientation) return\n    reset = () => {\n      isScroll.set(false)\n      startX = null\n      scrollLeft = null\n      ready = false\n    }\n    click = (e, index) => {\n      if (slider.scrollWidth <= slider.clientWidth) return\n      ready = true\n      startX = e.pageX - slider.offsetLeft\n      scrollLeft = slider.scrollLeft\n    }\n    scroll = (e, index) => {\n      if (!ready) return\n      isScroll.set(true)\n      e.preventDefault()\n      const walk = e.pageX - slider.offsetLeft - startX\n      slider.scrollLeft = scrollLeft - walk\n    }\n  })\n</script>\n\n<style>\n  div {\n    overflow-x: auto;\n    overflow-y: hidden;\n  }\n  div > :global(*) {\n    min-width: intrinsic !important;\n    min-width: max-content !important;\n  }\n  div.scroll {\n    cursor: ew-resize;\n  }\n  div.scroll > :global(*) {\n    pointer-events: none;\n  }\n  div::-webkit-scrollbar {\n    display: none;\n  }\n</style>\n","<div class:block class:small class:large>\n  <input\n    bind:this={input}\n    {type}\n    class:valid\n    class:invalid\n    class:clean\n    class:simple\n    value={format(value)}\n    min={min ? range(min) : null}\n    max={max ? range(max) : null}\n    maxLength={type === 'text' && max ? max : null}\n    placeholder={label}\n    aria-label={label}\n    {disabled}\n    {hidden}\n    {required}\n    {autofocus}\n    on:focus\n    on:blur\n    on:input={e => bubble(e)}\n    on:change={e => bubble(e)}\n    on:keydown={e => enter(e)} />\n  <label class:active={value || value === 0}>\n    {label || ''}\n    {#if type === 'text'}{max ? `(${length}/${max})` : ''}{/if}\n  </label>\n  {#if hints && filtered.length && !~hints.indexOf(value)}\n    <figure>\n      {#each filtered as hint}\n        <span on:click={() => bubbleEmu(hint)}>{hint}</span>\n      {/each}\n    </figure>\n  {/if}\n  <slot />\n</div>\n\n<script>\n  import { createEventDispatcher } from 'svelte'\n  const dispatch = createEventDispatcher()\n\n  export let label = null\n  export let disabled = false\n  export let hidden = false\n  export let valid = false\n  export let invalid = false\n  export let clean = false\n  export let simple = false\n  export let block = false\n  export let small = false\n  export let large = false\n  export let required = false\n  export let hints = null\n  export let type = 'text'\n  export let value = ''\n  export let min = null\n  export let max = null\n  export let autofocus = false\n\n  let input = null\n  let length = 0\n\n  const format = value => {\n    switch (type) {\n      case 'date':\n        return +value > 0\n          ? new Date(+value)\n            .toLocaleDateString('en-GB')\n            .split('/')\n            .reverse()\n            .join('-')\n          : ''\n      case 'number':\n        return +value || null\n      default:\n        value = value || ''\n        length = value.length\n        return max ? value.slice(0, max) : value\n    }\n  }\n\n  const range = value => {\n    switch (type) {\n      case 'date':\n        return value ? format(value) : ''\n      case 'number':\n        return value || ''\n      default:\n        return null\n    }\n  }\n\n  const bubbleEmu = value => {\n    if (input) input.focus()\n    bubble({ type: 'input', target: { value } })\n  }\n\n  const bubble = e => {\n    const target = e.target.value\n    let value\n\n    switch (type) {\n      case 'date':\n        value = target ? new Date(target).getTime() : null\n        break\n      case 'number':\n        value = +target || 0\n        break\n      default:\n        value = max ? target.slice(0, max) : target\n    }\n    dispatch(e.type, value)\n  }\n\n  const enter = e => {\n    if (e.keyCode !== 13) return\n    e.preventDefault()\n    dispatch('enter')\n  }\n\n  $: filtered = (hints || []).filter(\n    hint => ~hint.toUpperCase().indexOf((value || '').toUpperCase())\n  )\n</script>\n\n<style>\n  div {\n    position: relative;\n    display: inline-flex;\n    align-items: center;\n    height: var(--input-height-base);\n    min-width: var(--input-min-width);\n    vertical-align: middle;\n    cursor: text;\n  }\n  div > :global(*) {\n    cursor: inherit;\n  }\n  input {\n    padding: var(--control-padding-base);\n    color: var(--primary-txt);\n    font-size: var(--input-font-size);\n    line-height: var(--input-line-height-base);\n    height: 100%;\n    min-width: var(--input-min-width);\n    background-color: var(--input-background-color-base);\n    border: var(--input-border);\n    border-color: var(--input-border-color-primary);\n    border-radius: var(--input-border-radius);\n    box-shadow: var(--input-shadow);\n    box-sizing: border-box;\n    outline: none;\n    flex-grow: 1;\n  }\n  div.small,\n  div.small > input {\n    height: var(--input-height-small);\n    line-height: var(--input-line-height-small);\n  }\n  div.large,\n  div.large > input {\n    height: var(--input-height-large);\n    line-height: var(--input-line-height-large);\n  }\n  input:hover:not(:disabled),\n  input:focus {\n    border-color: var(--input-border-color-dark);\n    background-color: var(--input-background-color-focus);\n  }\n  input:focus:not(.clean) {\n    outline-offset: -4px;\n    outline: 0px dashed var(--input-border-color-primary);\n  }\n  input.valid:not(#hack) {\n    border-color: var(--input-border-color-secondary);\n  }\n  input.invalid:not(#hack) {\n    border-color: var(--input-border-color-tertiary);\n  }\n  input.clean {\n    border-width: 0;\n    border-bottom-width: 2px;\n    border-radius: 1px;\n    box-shadow: none;\n    background-color: transparent;\n  }\n  input:disabled {\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n  ::placeholder {\n    opacity: 0;\n  }\n  label {\n    position: absolute;\n    top: var(--common-border-width-base);\n    left: 0.8rem;\n    line-height: var(--input-line-height-base);\n    pointer-events: none;\n    opacity: 0.7;\n    white-space: nowrap;\n    overflow: hidden;\n    max-width: 80%;\n    font-weight: normal;\n  }\n  div.small > label {\n    line-height: var(--input-line-height-small);\n  }\n  div.large > label {\n    line-height: var(--input-line-height-large);\n  }\n  label.active:not(#hack),\n  input:focus + label {\n    color: var(--input-border-color-dark);\n    line-height: 1;\n    top: -18%;\n    opacity: 1;\n    background: linear-gradient(0deg, var(--input-background-color-focus), var(--input-background-color-focus),  transparent, transparent);\n  }\n  input.simple + label.active,\n  input.simple:focus + label {\n    opacity: 0;\n  }\n  div > :global(:last-child:not(label):not(figure)) {\n    position: absolute;\n    right: 0;\n    cursor: auto;\n  }\n  div > :global(svg:not(#hack)) {\n    right: 0.8rem;\n    pointer-events: none;\n  }\n  div > :global(button:not(.active)) {\n    cursor: auto;\n    box-shadow: none;\n    cursor: pointer;\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n  div.block {\n    display: flex;\n  }\n  :global(::-webkit-inner-spin-button),\n  :global(::-webkit-outer-spin-button) {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  figure {\n    background-color: var(--input-background-color-focus);\n    padding: var(--control-padding-base);\n    display: flex;\n    border: var(--input-border);\n    border-color: var(--input-border-color-dark);\n    border-radius: var(--input-border-radius);\n    border-width: 0;\n    flex-direction: column;\n    margin: 0;\n    position: absolute;\n    top: calc(100% - 2px);\n    left: 0;\n    right: 0;\n    max-height: 0;\n    overflow-y: auto;\n    overflow-x: hidden;\n    z-index: 2;\n  }\n  input:focus + label + figure,\n  figure:hover {\n    max-height: 100px;\n    border-width: 1px;\n    box-shadow: var(--input-shadow);\n  }\n  figure > span {\n    cursor: pointer;\n  }\n</style>\n","import { writable } from 'svelte/store';\n\nconst current = () => {\n  const [action, param] = location.hash.slice(1).split('?')\n\n  return { action, param }\n}\n\nconst go = (action, param) => {\n  let hash = action || \"\"\n  if (param) hash += '?' + param\n  location.hash = hash\n}\n\nconst { subscribe, set } = writable(current())\n\nwindow.addEventListener(\"hashchange\", () => set(current()))\n\nexport default { subscribe, go }\n","import { writable } from 'svelte/store'\nimport { tick } from 'svelte'\n\nexport const persist = (name, value) => {\n  const stored = localStorage.getItem(name)\n  value = writable(!stored ? value : JSON.parse(stored))\n  value.subscribe(value => {\n    if (value !== undefined) {\n      localStorage.setItem(name, JSON.stringify(value))\n    }\n  })\n  return value\n}\n\nexport const deferred = (name, value) => {\n  const { subscribe, set, update } = persist(name, value)\n  return {\n    subscribe,\n    set: (value) => tick().then(() => set(value)),\n    update: (value) => tick().then(() => update(value))\n  }\n}\n\nexport const debounced = (name, value, delay = 300) => {\n  const { subscribe, set } = persist(name, value)\n  let query = null, count = null\n  const debounce = value => {\n    if (value !== undefined) query = value\n    if (count) return\n    count = setTimeout(() => {\n      set(query)\n      count = null\n    }, delay)\n  }\n  return { subscribe, set: debounce }\n}\n","import { persist } from 'svelte-persist'\n\nconst { subscribe, update } = persist('myLinks', {})\n\nconst add = link =>\n  update(links => {\n    links[link.id] = link\n    return { ...links }\n  })\n\nconst del = id =>\n  update(links => {\n    delete links[id]\n    return { ...links }\n  })\n\nexport default {\n  subscribe,\n  add,\n  del\n}\n","<svelte:window on:focus={() => get_clipboard()} />\n\n<Container small middle>\n  <h2>Welcome! Ready to get started?</h2>\n  <h4>No registration, no ads, no logs, no fee.</h4>\n  <Input\n    block\n    large\n    label={message.url || \"Enter URL you want to shorten, e.g. http://example.com\"}\n    on:input={(e) => (url = e.detail)}\n    value={url}\n    on:enter={() => submit()}\n    invalid={message.url}\n  >\n    <Button\n      on:click={() => (url = clipboard)}\n      hidden={!clipboard || url}\n      label=\"< {clipboard}\"\n      clean\n      large\n    >\n      paste\n    </Button>\n    <Button\n      on:click={() => (url = \"\")}\n      hidden={!url}\n      danger={message.url}\n      label=\"clear\"\n      large\n    >\n      {message.url ? '!' : 'x'}\n    </Button>\n  </Input>\n  <Input\n    block\n    large\n    label={message.mail || \"You can specify your email, to edit this link in future\"}\n    on:input={(e) => (mail = e.detail)}\n    value={mail}\n    hints={emails()}\n    on:enter={() => submit()}\n    invalid={message.mail}\n  >\n    <Button\n      on:click={() => (mail = \"\")}\n      hidden={!mail}\n      danger={message.mail}\n      label=\"clear\"\n      large\n    >\n      {message.mail ? '!' : 'x'}\n    </Button>\n  </Input>\n  <Button\n    on:click={() => submit()}\n    disabled={!url}\n    large\n    label={url ? 'Let\\'s shorten' : 'URL required'}\n    width\n    center\n  />\n  <p hidden={!message.message}>\n    {message.message}\n  </p>\n</Container>\n\n<script>\n  import { Input, Container, Button } from 'forui'\n  import router from './stores/router.js'\n  import links from './stores/links.js'\n  import { onMount } from 'svelte'\n\n  let url = \"\"\n  let mail = \"\"\n  let message = {}\n  let interval = null\n  let clipboard = \"\"\n\n  const get_clipboard = async () => {\n    const str = await navigator.clipboard.readText()\n    if (str.startsWith('http')) clipboard = str\n  }\n  \n  onMount(() => get_clipboard())\n\n  const emails = () => {\n    const arr = Object.values($links).map(l => l.mail).filter(m => m)\n    return [...new Set(arr)]\n  }\n\n  const submit = async () => {\n    if (!url) return\n\n    const data = { url, mail: mail || undefined }\n\n    const res = await fetch(\"/create\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    })\n\n    if (res.status === 400) {\n      message = await res.json()\n    }\n    else if (res.status === 200) {\n      const link = await res.json()\n      links.add(link)\n      router.go(\"search\", link.id)\n    }\n    else {\n      message = {message: 'Something went wrong, try again later'}\n    }\n\n    clearInterval(interval)\n    interval = setInterval(() => (message = {}), 5000)\n  }\n</script>\n\n<style>\n  :global(.small > .block), h2, h4 {\n    margin-bottom: 1.3rem;\n    font-weight: 400;\n    text-align: center;\n  }\n</style>\n","<Slider>\n  <table>\n    <tr>\n      <th colspan=\"3\">\n        <Input\n          block\n          large\n          label={message.id || location.origin + '/' + ($router.param || '')}\n          on:input={(e) => search(e)}\n          value={$router.param || ''}\n          on:enter={() => find()}\n          invalid={message.id}\n          valid={found && found.id == $router.param}\n        >\n          <div>\n            <Button\n              on:click={() => router.go('search')}\n              hidden={!$router.param}\n              label=\"All\"\n              clean\n              large\n            >\n            x\n            </Button>\n            <Button\n              on:click={() => find()}\n              disabled={!$router.param}\n              label={message.id ? 'Not found' : 'Search'}\n              danger={message.id}\n              success={found && found.id == $router.param}\n              large\n            />\n          </div>\n        </Input>\n      </th>\n    </tr>\n    <tr>\n      <th>Link</th>\n      <th>To</th>\n      <th></th>\n    </tr>\n    {#each links_list as link}\n      <tr>\n        <td>\n          <a href=\"/{link.id}\" target=\"_blank\">\n            {location.origin}/{link.id}\n          </a>\n        </td>\n        <td>\n          <span>{link.url}</span>\n        </td>\n        <td>\n          <BtnGroup right block>\n            <Button\n              on:click={() => copy(link.id)}\n              label=\"Copy\"\n              clean\n              small\n            />\n            <Button\n              on:click={() => router.go(\"edit\", link.id)}\n              label=\"Edit\"\n              hidden={!$links[link.id] && !link.shadow}\n              clean\n              small\n            />\n            <Button\n              on:click={() => links.del(link.id)}\n              label=\"Hide\"\n              hidden={!$links[link.id]}\n              clean\n              small\n            >x</Button>\n          </BtnGroup>\n        </td>\n      </tr>\n    {/each}\n  </table>\n</Slider>\n\n<script>\n  import { Input, Container, Button, BtnGroup, Slider } from 'forui'\n  import router from './stores/router.js'\n  import links from './stores/links.js'\n  import { onMount } from 'svelte'\n\n  let id = $router.param || \"\"\n  let mail = \"\"\n  let message = {}\n  let interval = null\n  let found = null\n\n  $: links_list = !$router.param\n    ? Object.values($links)\n    : found && $router.param == found.id\n      ? [found]\n      : []\n\n  const find = async () => {\n    if (!$router.param) return\n\n    if ($links[$router.param]) {\n      return found = $links[$router.param]\n    }\n    \n    const res = await fetch('/get/' + $router.param)\n\n    if (res.status == 404) {\n      message = await res.json()\n      clearInterval(interval)\n      interval = setInterval(() => (message = {}), 2000)\n    } else if (res.status == 200) {\n      found = await res.json()\n    }\n  }\n\n  onMount(() => find())\n\n  const search = e => {\n    const origin = location.origin + '/'\n    const id = e.detail.replace(origin, \"\")\n    router.go('search', id)\n  }\n\n  const copy = id => {\n    const url = location.origin + '/' + id\n    navigator.clipboard.writeText(url)\n  }\n</script>\n\n<style>\n  table {\n    border-collapse: collapse;\n    font-size: 0.9rem;\n  }\n  th {\n    text-align: left;\n  }\n  td, th {\n    padding: 0.6rem 1.2rem;\n  }\n  tr {\n    border: 1px solid #ddd;\n  }\n  tr:first-child > th {\n    padding: 1.2rem;\n  }\n  tr:nth-child(odd) {\n    background-color: var(--common-background-color-lighten);\n  }\n  span {\n    display: inline-block;\n    max-width: 36vw;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n</style>\n","<Container small scrollx>\n<!--  <Input\n    block\n    label={message.url || \"Enter URL you want to shorten, e.g. http://example.com\"}\n    on:input={(e) => (url = e.detail)}\n    value={url}\n    on:enter={() => submit()}\n    invalid={message.url}\n  />\n  <Input\n    block\n    label={message.mail || \"You can specify your email, to edit this link in future\"}\n    on:input={(e) => (mail = e.detail)}\n    value={mail}\n    on:enter={() => submit()}\n    invalid={message.mail}\n  />\n  <Button\n    on:click={() => submit()}\n    disabled={!url}\n    label={url ? 'Let\\'s shorten' : 'URL required'}\n    width\n    center\n  />\n  <p hidden={!message.message}>\n    {message.message}\n  </p>\n-->  \n</Container>\n<pre hidden={false}>{JSON.stringify($links, null, 2)}</pre>\n\n<script>\n  import { Input, Container, Button } from 'forui'\n  import links from './stores/links.js'\n\n  let url = \"\"\n  let mail = \"\"\n  let message = {}\n  let interval = null\n\n  const submit = async () => {\n    if (!url) return\n\n    const data = { url, mail: mail || undefined }\n\n    const res = await fetch(\"/create\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    })\n\n    if (res.status === 400) {\n      message = await res.json()\n    }\n    else if (res.status === 200) {\n      const link = await res.json()\n      links.add(link)\n      location.hash = \"success?\" + link.id\n    }\n    else {\n      message = {message: 'Something went wrong, try again later'}\n    }\n\n    clearInterval(interval)\n    interval = setInterval(() => (message = {}), 10000)\n  }\n</script>\n","<svelte:head>\n  <title>shorty / {$router.action || \"add\"}{$router.param ? \" / \" + $router.param : ''}</title>\n</svelte:head>\n\n<Header>\n  <h1 on:click={() => router.go()}>\n    {$router.action || 'Shorty'}\n  </h1>\n  <BtnGroup right>\n    <Button\n      on:click={() => router.go()}\n      label=\"Add\"\n      disabled={!$router.action}\n      clean\n    />\n    <Button\n      on:click={() => router.go(\"search\")}\n      label=\"Search\"\n      disabled={$router.action === \"search\"}\n      clean\n    />\n    <Button\n      on:click={() => router.go(\"help\")}\n      label=\"Help\"\n      disabled={$router.action === \"help\"}\n      clean\n    />\n  </BtnGroup>\n</Header>\n\n<Main>\n  {#if !$router.action}\n    <Create />\n  {:else if $router.action === \"edit\"}\n    <Edit />\n  {:else if $router.action === \"search\"}\n    <Search />\n  {:else if $router.action === \"help\"}\n    <Help />\n  {/if}\n</Main>\n\n<script>\n  import { Header, Main, Button, BtnGroup } from 'forui'\n  import Create from './Create.svelte'\n  import Search from './Search.svelte'\n  import Edit from './Edit.svelte'\n  import Help from './Help.svelte'\n  import router from './stores/router.js'\n</script>\n\n<style>\n  :global(html:not(#hack)) {\n    --common-background-image: none;\n  }\n  h1 {\n    text-transform: capitalize;\n  }\n</style>\n","import App from './App.svelte';\nimport 'forui/themes/default.scss'\nimport 'forui/forui.css'\n\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","merged","len","Math","max","length","i","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","has","add","fragment","before_update","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","scrollx","scrolly","small","middle","center","right","between","wrap","gutter","image","label","disabled","hidden","active","success","inverse","danger","clean","large","card","width","style","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","window","orientation","isScroll","slider","startX","scrollLeft","reset","click","scroll","scrollWidth","clientWidth","pageX","offsetLeft","preventDefault","walk","dispatch","valid","invalid","simple","required","hints","min","autofocus","input","format","Date","toLocaleDateString","split","reverse","join","bubbleEmu","focus","getTime","enter","keyCode","filtered","hint","toUpperCase","current","action","param","location","hash","go","stored","localStorage","getItem","JSON","parse","undefined","setItem","stringify","persist","link","links","id","del","url","mail","message","interval","clipboard","get_clipboard","str","navigator","readText","startsWith","submit","res","fetch","method","headers","Content-Type","body","status","json","router","clearInterval","setInterval","arr","values","$links","shadow","origin","$router","found","find","search","replace","copy","writeText","links_list"],"mappings":"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"}